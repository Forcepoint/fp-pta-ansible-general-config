- name: create normal SSH key
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

- name: create root SSH key
  become: yes
  ansible.builtin.user:
    name: "root"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

# https://github.com/git-lfs/git-lfs/wiki/Installation#rhelcentos
- name: add the github git-lfs repo
  become: yes
  ansible.builtin.yum_repository:
    name: github_git-lfs
    description: ""
    baseurl: "{{ general_config_git_lfs_yum_repo_base_url }}"
    repo_gpgcheck: yes
    gpgcheck: no
    enabled: yes
    gpgkey: "{{ general_config_git_lfs_yum_repo_gpg_key }}"
    sslverify: yes
    sslcacert: "{{ general_config_git_lfs_yum_repo_sslcacert }}"
    metadata_expire: "300"

- name: install python2-dnf
  become: yes
  ansible.builtin.yum:
    name: python2-dnf
    state: latest
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: upgrade all packages
  become: yes
  ansible.builtin.dnf:
    name: '*'
    state: latest

- name: install git-lfs prereqs
  become: yes
  ansible.builtin.dnf:
    name:
      - pygpgme
      - yum-utils
    state: latest
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: install git-lfs
  become: yes
  ansible.builtin.dnf:
    name: git-lfs
    state: latest

- name: enable git-lfs
  ansible.builtin.shell: git lfs install

- name: enable git-lfs (become)
  become: yes
  ansible.builtin.shell: git lfs install

- name: modify git config http ca info
  become: yes
  ansible.builtin.shell: git config --system http."{{ general_config_git_https_server }}".sslCAInfo "{{ general_config_git_sslcainfo }}"
  when: general_config_git_sslcainfo is defined and general_config_git_https_server is defined

- name: place the pip config file
  become: yes
  ansible.builtin.template:
    src: templates/pip.j2
    dest: /etc/pip.conf
    owner: root
    group: root
    mode: "0444"

# CentOS 8 and Stream baselines are assumed to already have latest available python and pip installed from the OS package manager.
- name: remove pip package with yum
  become: yes
  ansible.builtin.dnf:
    name: python2-pip
    state: absent
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: download pip helper script
  become: yes
  ansible.builtin.get_url:
    url: "{{ general_config_pip_download_host }}/pip/2.7/get-pip.py"
    dest: /tmp/get-pip.py
    mode: '0555'
    force: yes
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: adjust the path
  become: yes
  ansible.builtin.copy:
    src: "files/path_user_local_bin.sh"
    dest: /etc/profile.d/path_user_local_bin.sh
    mode: '0755'
    force: yes
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: install pip from helper script (become)
  become: yes
  ansible.builtin.shell: python /tmp/get-pip.py
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: install pip from helper script
  ansible.builtin.shell: python /tmp/get-pip.py
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version <= '7'

- name: install pip packages
  ansible.builtin.pip:
    name:
      - setuptools
      - virtualenv
    umask: "0022"
    state: latest

- name: install 7zip
  become: yes
  ansible.builtin.dnf:
    name: 'p7zip'
    state: latest